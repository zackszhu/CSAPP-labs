                      | #######################################################################
                      | # Test for copying block of size 4;
                      | #######################################################################
  0x000:              | 	.pos 0
  0x000: 30f448040000 | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x006: 30f548040000 | 	irmovl Stack, %ebp  	# Set up base pointer
                      | 
                      | 	# Set up arguments for copy function and then invoke it
  0x00c: 30f004000000 | 	irmovl $4, %eax		# src and dst have 4 elements
  0x012: a00f         | 	pushl %eax
  0x014: 30f0f4030000 | 	irmovl dest, %eax	# dst array
  0x01a: a00f         | 	pushl %eax
  0x01c: 30f0d8030000 | 	irmovl src, %eax	# src array
  0x022: a00f         | 	pushl %eax
  0x024: 802a000000   | 	call ncopy		 
  0x029: 00           | 	halt			# should halt with num nonzeros in %eax
  0x02a:              | StartFun:
                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | # 5130379013 Zhu Chaojie
                      | # Describe how and why you modified the baseline code.
                      | # * Add instruction iaddl to replace irmovl+addl
                      | ##################################################################
                      | # Do not modify this portion
                      | # Function prologue.
  0x02a: a05f         | ncopy:	pushl %ebp		# Save old frame pointer
  0x02c: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x02e: a06f         | 	pushl %esi		# Save callee-save regs
  0x030: a03f         | 	pushl %ebx
  0x032: a07f         | 	pushl %edi
  0x034: 503508000000 | 	mrmovl 8(%ebp),%ebx	# src
  0x03a: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
  0x040: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
                      | 
                      | ##################################################################
                      | # You can modify this portion
                      | 	# Loop header
  0x046: 6300         | 	xorl %eax,%eax		# count = 0;
  0x048: c0f2f1ffffff | 	iaddl $-15, %edx		# len <= ?
  0x04e: 71fc010000   | 	jle Out		# if so, goto Out:
  0x053:              | Loop:	
  0x053: 506300000000 | 	mrmovl (%ebx), %esi
  0x059: 507304000000 | 	mrmovl 4(%ebx), %edi 
  0x05f: 406100000000 | 	rmmovl %esi, (%ecx)	
  0x065: 407104000000 | 	rmmovl %edi, 4(%ecx)
  0x06b: 6266         | 	andl %esi, %esi
  0x06d: 7178000000   | 	jle A		
  0x072: c0f001000000 | 	iaddl $1, %eax		
  0x078: 6277         | A:	andl %edi, %edi	
  0x07a: 7185000000   | 	jle B		
  0x07f: c0f001000000 | 	iaddl $1, %eax		
  0x085: 506308000000 | B:	mrmovl 8(%ebx), %esi
  0x08b: 50730c000000 | 	mrmovl 12(%ebx), %edi 
  0x091: 406108000000 | 	rmmovl %esi, 8(%ecx)
  0x097: 40710c000000 | 	rmmovl %edi, 12(%ecx)
  0x09d: 6266         | 	andl %esi, %esi		
  0x09f: 71aa000000   | 	jle C		
  0x0a4: c0f001000000 | 	iaddl $1, %eax		
  0x0aa: 6277         | C:	andl %edi, %edi		
  0x0ac: 71b7000000   | 	jle D		
  0x0b1: c0f001000000 | 	iaddl $1, %eax		
  0x0b7: 506310000000 | D:	mrmovl 16(%ebx), %esi
  0x0bd: 507314000000 | 	mrmovl 20(%ebx), %edi 
  0x0c3: 406110000000 | 	rmmovl %esi, 16(%ecx)
  0x0c9: 407114000000 | 	rmmovl %edi, 20(%ecx)
  0x0cf: 6266         | 	andl %esi, %esi		
  0x0d1: 71dc000000   | 	jle E		
  0x0d6: c0f001000000 | 	iaddl $1, %eax	
  0x0dc: 6277         | E:	andl %edi, %edi		
  0x0de: 71e9000000   | 	jle F		
  0x0e3: c0f001000000 | 	iaddl $1, %eax		
  0x0e9: 506318000000 | F:	mrmovl 24(%ebx), %esi 
  0x0ef: 50731c000000 | 	mrmovl 28(%ebx), %edi 
  0x0f5: 406118000000 | 	rmmovl %esi, 24(%ecx)
  0x0fb: 40711c000000 | 	rmmovl %edi, 28(%ecx)
  0x101: 6266         | 	andl %esi, %esi		
  0x103: 710e010000   | 	jle G		
  0x108: c0f001000000 | 	iaddl $1, %eax		
  0x10e: 6277         | G:	andl %edi, %edi		
  0x110: 711b010000   | 	jle H		
  0x115: c0f001000000 | 	iaddl $1, %eax		
  0x11b: 506320000000 | H:	mrmovl 32(%ebx), %esi
  0x121: 507324000000 | 	mrmovl 36(%ebx), %edi 
  0x127: 406120000000 | 	rmmovl %esi, 32(%ecx)
  0x12d: 407124000000 | 	rmmovl %edi, 36(%ecx)
  0x133: 6266         | 	andl %esi, %esi		
  0x135: 7140010000   | 	jle I		
  0x13a: c0f001000000 | 	iaddl $1, %eax	
  0x140: 6277         | I:	andl %edi, %edi		
  0x142: 714d010000   | 	jle J		
  0x147: c0f001000000 | 	iaddl $1, %eax	
  0x14d: 506328000000 | J:	mrmovl 40(%ebx), %esi 
  0x153: 50732c000000 | 	mrmovl 44(%ebx), %edi 
  0x159: 406128000000 | 	rmmovl %esi, 40(%ecx)
  0x15f: 40712c000000 | 	rmmovl %edi, 44(%ecx)
  0x165: 6266         | 	andl %esi, %esi		
  0x167: 7172010000   | 	jle K		
  0x16c: c0f001000000 | 	iaddl $1, %eax	
  0x172: 6277         | K:	andl %edi, %edi		
  0x174: 717f010000   | 	jle L		
  0x179: c0f001000000 | 	iaddl $1, %eax	
  0x17f: 506330000000 | L:	mrmovl 48(%ebx), %esi
  0x185: 507334000000 | 	mrmovl 52(%ebx), %edi  
  0x18b: 406130000000 | 	rmmovl %esi, 48(%ecx)
  0x191: 407134000000 | 	rmmovl %edi, 52(%ecx)
  0x197: 6266         | 	andl %esi, %esi		
  0x199: 71a4010000   | 	jle M		
  0x19e: c0f001000000 | 	iaddl $1, %eax	
  0x1a4: 6277         | M:	andl %edi, %edi		
  0x1a6: 71b1010000   | 	jle N		
  0x1ab: c0f001000000 | 	iaddl $1, %eax	
  0x1b1: 506338000000 | N:	mrmovl 56(%ebx), %esi 
  0x1b7: 50733c000000 | 	mrmovl 60(%ebx), %edi 
  0x1bd: 406138000000 | 	rmmovl %esi, 56(%ecx)
  0x1c3: 40713c000000 | 	rmmovl %edi, 60(%ecx)
  0x1c9: 6266         | 	andl %esi, %esi		
  0x1cb: 71d6010000   | 	jle O		
  0x1d0: c0f001000000 | 	iaddl $1, %eax	
  0x1d6: 6277         | O:	andl %edi, %edi		
  0x1d8: 71e3010000   | 	jle NEXT		
  0x1dd: c0f001000000 | 	iaddl $1, %eax	
  0x1e3: c0f340000000 | NEXT:	iaddl $64, %ebx		# src++
  0x1e9: c0f140000000 | 	iaddl $64, %ecx		# dst++
  0x1ef: 6222         | 	andl %edx,%edx		# len > 0?
  0x1f1: c0f2f0ffffff | 	iaddl $-16, %edx		# len--
  0x1f7: 7653000000   | 	jg Loop			# if so, goto Loop:
  0x1fc: c0f20f000000 | Out:	iaddl $15, %edx
  0x202: 6022         | 	addl %edx, %edx		# len *= 4;
  0x204: 6022         | 	addl %edx, %edx
  0x206: 502298030000 | 	mrmovl J17(%edx), %edx 
  0x20c: a02f         | 	pushl %edx
  0x20e: 90           | 	ret
  0x20f: 506338000000 | J15: mrmovl 56(%ebx), %esi
  0x215: 406138000000 | 	rmmovl %esi, 56(%ecx)
  0x21b: 6266         | 	andl %esi, %esi
  0x21d: 7128020000   | 	jle J14
  0x222: c0f001000000 | 	iaddl $1, %eax
  0x228: 506334000000 | J14: mrmovl 52(%ebx), %esi
  0x22e: 406134000000 | 	rmmovl %esi, 52(%ecx)
  0x234: 6266         | 	andl %esi, %esi
  0x236: 7141020000   | 	jle J13
  0x23b: c0f001000000 | 	iaddl $1, %eax
  0x241: 506330000000 | J13: mrmovl 48(%ebx), %esi
  0x247: 406130000000 | 	rmmovl %esi, 48(%ecx)
  0x24d: 6266         | 	andl %esi, %esi
  0x24f: 715a020000   | 	jle J12
  0x254: c0f001000000 | 	iaddl $1, %eax
  0x25a: 50632c000000 | J12: mrmovl 44(%ebx), %esi
  0x260: 40612c000000 | 	rmmovl %esi, 44(%ecx)
  0x266: 6266         | 	andl %esi, %esi
  0x268: 7173020000   | 	jle J11
  0x26d: c0f001000000 | 	iaddl $1, %eax
  0x273: 506328000000 | J11: mrmovl 40(%ebx), %esi
  0x279: 406128000000 | 	rmmovl %esi, 40(%ecx)
  0x27f: 6266         | 	andl %esi, %esi
  0x281: 718c020000   | 	jle J10
  0x286: c0f001000000 | 	iaddl $1, %eax
  0x28c: 506324000000 | J10: mrmovl 36(%ebx), %esi
  0x292: 406124000000 | 	rmmovl %esi, 36(%ecx)
  0x298: 6266         | 	andl %esi, %esi
  0x29a: 71a5020000   | 	jle J9
  0x29f: c0f001000000 | 	iaddl $1, %eax
  0x2a5: 506320000000 | J9: mrmovl 32(%ebx), %esi
  0x2ab: 406120000000 | 	rmmovl %esi, 32(%ecx)
  0x2b1: 6266         | 	andl %esi, %esi
  0x2b3: 71be020000   | 	jle J8
  0x2b8: c0f001000000 | 	iaddl $1, %eax
  0x2be: 50631c000000 | J8: mrmovl 28(%ebx), %esi
  0x2c4: 40611c000000 | 	rmmovl %esi, 28(%ecx)
  0x2ca: 6266         | 	andl %esi, %esi
  0x2cc: 71d7020000   | 	jle J7
  0x2d1: c0f001000000 | 	iaddl $1, %eax
  0x2d7: 506318000000 | J7: mrmovl 24(%ebx), %esi
  0x2dd: 406118000000 | 	rmmovl %esi, 24(%ecx)
  0x2e3: 6266         | 	andl %esi, %esi
  0x2e5: 71f0020000   | 	jle J6
  0x2ea: c0f001000000 | 	iaddl $1, %eax
  0x2f0: 506314000000 | J6: mrmovl 20(%ebx), %esi
  0x2f6: 406114000000 | 	rmmovl %esi, 20(%ecx)
  0x2fc: 6266         | 	andl %esi, %esi
  0x2fe: 7109030000   | 	jle J5
  0x303: c0f001000000 | 	iaddl $1, %eax
  0x309: 506310000000 | J5: mrmovl 16(%ebx), %esi
  0x30f: 406110000000 | 	rmmovl %esi, 16(%ecx)
  0x315: 6266         | 	andl %esi, %esi
  0x317: 7122030000   | 	jle J4
  0x31c: c0f001000000 | 	iaddl $1, %eax
  0x322: 50630c000000 | J4: mrmovl 12(%ebx), %esi
  0x328: 40610c000000 | 	rmmovl %esi, 12(%ecx)
  0x32e: 6266         | 	andl %esi, %esi
  0x330: 713b030000   | 	jle J3
  0x335: c0f001000000 | 	iaddl $1, %eax
  0x33b: 506308000000 | J3: mrmovl 8(%ebx), %esi
  0x341: 406108000000 | 	rmmovl %esi, 8(%ecx)
  0x347: 6266         | 	andl %esi, %esi
  0x349: 7154030000   | 	jle J2
  0x34e: c0f001000000 | 	iaddl $1, %eax
  0x354: 506304000000 | J2: mrmovl 4(%ebx), %esi
  0x35a: 406104000000 | 	rmmovl %esi, 4(%ecx)
  0x360: 6266         | 	andl %esi, %esi
  0x362: 716d030000   | 	jle J1
  0x367: c0f001000000 | 	iaddl $1, %eax
  0x36d: 506300000000 | J1:	mrmovl (%ebx), %esi
  0x373: 406100000000 | 	rmmovl %esi, (%ecx)
  0x379: 6266         | 	andl %esi, %esi
  0x37b: 7186030000   | 	jle J0
  0x380: c0f001000000 | 	iaddl $1, %eax
  0x386: 7029000000   | J0:	jmp 0x29
                      | ##################################################################
                      | # Do not modify the following section of code
                      | # Function epilogue.
  0x38b:              | Done:
  0x38b: b07f         | 	popl %edi               # Restore callee-save registers
  0x38d: b03f         | 	popl %ebx
  0x38f: b06f         | 	popl %esi
  0x391: 2054         | 	rrmovl %ebp, %esp
  0x393: b05f         | 	popl %ebp
  0x395: 90           | 	ret
                      | ##################################################################
                      | # Keep the following label at the end of your function
                      | 
  0x398:              | 	.align 4
  0x398: 86030000     | J17:	.long	J0
  0x39c: 6d030000     | 	.long	J1
  0x3a0: 54030000     | 	.long	J2
  0x3a4: 3b030000     | 	.long 	J3
  0x3a8: 22030000     | 	.long	J4
  0x3ac: 09030000     | 	.long	J5
  0x3b0: f0020000     | 	.long	J6
  0x3b4: d7020000     | 	.long	J7
  0x3b8: be020000     | 	.long	J8
  0x3bc: a5020000     | 	.long	J9
  0x3c0: 8c020000     | 	.long	J10
  0x3c4: 73020000     | 	.long 	J11
  0x3c8: 5a020000     | 	.long	J12
  0x3cc: 41020000     | 	.long	J13
  0x3d0: 28020000     | 	.long	J14
  0x3d4: 0f020000     | 	.long	J15
                      | 
  0x3d8:              | End:
                      | #/* $end ncopy-ys */
  0x3d8:              | EndFun:
                      | 
                      | ###############################
                      | # Source and destination blocks 
                      | ###############################
  0x3d8:              | 	.align 4
  0x3d8:              | src:
  0x3d8: 01000000     | 	.long 1
  0x3dc: feffffff     | 	.long -2
  0x3e0: 03000000     | 	.long 3
  0x3e4: fcffffff     | 	.long -4
  0x3e8: fadebc00     | 	.long 0xbcdefa # This shouldn't get moved
                      | 
  0x3f0:              | 	.align 16
  0x3f0:              | Predest:
  0x3f0: fadebc00     | 	.long 0xbcdefa
  0x3f4:              | dest:
  0x3f4: abefcd00     | 	.long 0xcdefab
  0x3f8: abefcd00     | 	.long 0xcdefab
  0x3fc: abefcd00     | 	.long 0xcdefab
  0x400: abefcd00     | 	.long 0xcdefab
  0x404:              | Postdest:
  0x404: bcfade00     | 	.long 0xdefabc
                      | 
  0x408:              | .align 4
                      | # Run time stack
  0x408: 00000000     | 	.long 0
  0x40c: 00000000     | 	.long 0
  0x410: 00000000     | 	.long 0
  0x414: 00000000     | 	.long 0
  0x418: 00000000     | 	.long 0
  0x41c: 00000000     | 	.long 0
  0x420: 00000000     | 	.long 0
  0x424: 00000000     | 	.long 0
  0x428: 00000000     | 	.long 0
  0x42c: 00000000     | 	.long 0
  0x430: 00000000     | 	.long 0
  0x434: 00000000     | 	.long 0
  0x438: 00000000     | 	.long 0
  0x43c: 00000000     | 	.long 0
  0x440: 00000000     | 	.long 0
  0x444: 00000000     | 	.long 0
                      | 
  0x448:              | Stack:
