# 5130379013 Zhu Chaojie

# Execution begins at address 0
	.pos 0
init:
	irmovl Stack, %esp  	# Set up Stack pointer
	irmovl Stack, %ebp  	# Set up base pointer
	jmp Main		# Execute main program

# Sample linked list
	.align 4
ele1:
	.long 0x00a
	.long ele2
ele2:
	.long 0x0b0
	.long ele3
ele3:
	.long 0xc00
	.long 0

Main:

	irmovl ele1, %edx 		# Set parameter
	pushl %edx
	call Rsum

	halt

Rsum:
	pushl %ebp
	rrmovl %esp, %ebp
	pushl %ecx
	mrmovl 8(%ebp), %ecx
	andl %ecx, %ecx
	jne Recursion
	xorl %eax, %eax
	jmp Exit

Recursion:
	mrmovl 4(%ecx), %edx
	pushl %edx
	call Rsum
	mrmovl (%ecx), %edx
	addl %edx, %eax

Exit:
	mrmovl -4(%ebp),%ecx
	rrmovl %ebp, %esp
	popl %ebp
	ret

	.pos 0x100
Stack:	# The stack
